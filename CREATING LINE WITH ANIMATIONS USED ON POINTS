#include <GL/glut.h>
#include <iostream>
#include <vector>
#include <cmath>
#include <sstream>

using namespace std;

// Vector to store the coordinates of the points
vector<pair<float, float>> points;

void displayText(float x, float y, const string& text) {
    glColor3f(1.0, 1.0, 1.0);  // Text color (white)
    glRasterPos2f(x, y);
    for (char c : text) {
        glutBitmapCharacter(GLUT_BITMAP_HELVETICA_18, c);
    }
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);

    // Draw points
    glColor3f(1.0, 0.0, 0.0);  // Point color (red)
    for (auto point : points) {
        glPointSize(5.0);
        glBegin(GL_POINTS);
        glVertex2f(point.first, point.second);
        glEnd();

        // Display point coordinates
        stringstream ss;
        ss << "(" << point.first << ", " << point.second << ")";
        displayText(point.first + 0.02f, point.second + 0.02f, ss.str());
    }

    // Draw line and display slope if two points are clicked
    if (points.size() == 2) {
        glColor3f(0.0, 1.0, 0.0);  // Line color (green)
        glBegin(GL_LINES);
        glVertex2f(points[0].first, points[0].second);
        glVertex2f(points[1].first, points[1].second);
        glEnd();

        // Calculate and display slope
        float slope = (points[1].second - points[0].second) / (points[1].first - points[0].first);
        stringstream ss;
        ss << "Slope: " << slope;
        displayText(-0.9f, 0.9f, ss.str());
    }

    // Display name and roll number at the bottom left corner
    displayText(-0.9f, -0.9f, "NAME : AARSH S LAL , SAPID: 500102109");

    glutSwapBuffers();
}

void mouseClick(int button, int state, int x, int y) {
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        if (points.size() < 2) {
            // Convert screen coordinates to OpenGL coordinates
            float xPos = (x / (float)glutGet(GLUT_WINDOW_WIDTH)) * 2 - 1;
            float yPos = 1 - (y / (float)glutGet(GLUT_WINDOW_HEIGHT)) * 2;
            points.push_back({ xPos, yPos });
        }
        else if (points.size() == 2) {
            // Reset the points and wait for new clicks
            points.clear();
        }
        glutPostRedisplay();  // Redraw the screen
    }
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(800, 600);
    glutCreateWindow("OpenGL Line Drawing");

    glClearColor(0.0, 0.0, 0.0, 1.0);  // Background color (black)

    glutDisplayFunc(display);
    glutMouseFunc(mouseClick);

    glutMainLoop();
    return 0;
}
